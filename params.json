{
  "name": "Src2Markdown",
  "tagline": "Create markdown reports from scripts",
  "body": "\r\n# Src2Markdown\r\n\r\n# Description\r\n\r\n`SrctoMarkdown.py` takes a script written in **python**, **perl**, **java**, **javascript**, **R** or **bash**\r\nand generates a markdown document with comments processed as markdown text, and code embedded in\r\nmarkdown code tags.\r\n\r\nThe output file is then converted into html, pdf, and other output formats supported by `Pandoc`.\r\n\r\nThis is an example of a script:\r\n\r\n![](examples/image_input.png)\r\n\r\nAnd this is the output:\r\n\r\n![](examples/image_output.png)\r\n\r\nSee below for more details.  \r\nYou can see more examples on [this repository](https://github.com/joseah/SrcToMarkdown/tree/master/examples)\r\n\r\n# Requirements\r\n\r\n## Pandoc\r\n\r\nThis program requires [Pandoc](http://pandoc.org/) to convert the markdown output generated\r\nwith this program to any other format.\r\n\r\nDownload Pandoc from the [installing webpage](http://pandoc.org/installing.html).\r\n\r\n**`SrctoMarkdown.py` is implemented under Pandoc version `1.17.0.2`**\r\n \r\n## pypandoc\r\n\r\nIn order to use pandoc within python, pypandoc wrapper is required.\r\n\r\nInstall `pypandoc` via `pip`:\r\n\r\n```bash\r\nsudo pip install pypandoc\r\n```\r\n\r\n> See [pip webpage](https://pip.pypa.io/en/stable/installing/) if you do not use `pip` yet\r\n\r\n**`SrctoMarkdown.py` is implemented under pypandoc version `1.2.0`**\r\n\r\n# Parameter description\r\n\r\n\r\n| Parameters |                  Description                   | Mandatory? |\r\n|:----------:|:----------------------------------------------:|:----------:|\r\n| -s         | script file (with comments in markdown style)  |Yes         |\r\n| -o         |      output format (html, pdf, rst, ...)       |Yes         |\r\n| -c         |                    css file                    |No          |\r\n| -md        |            Write markdown output?              |No          |\r\n| -pandoc    |Path to pandoc. Default `/usr/local/bin/pandoc` |No          |\r\n\r\n# Usage example\r\n\r\n```shell\r\npython SrctoMarkdown.py -s functions.js -o html -c github.css\r\n```\r\n\r\nCreates an html report for `functions.js`. A CSS file is used to give style to html output file.\r\n\r\n\r\n# Comments on markdown style\r\n\r\n## Perl, Bash, R\r\n\r\nIf you want to add a markdown comment, you have to use the `#'` pattern.\r\nIt tells `ScrtoMarkdown` that comments with this pattern at the beginning of \r\neach line will be processed as markdown text.\r\n\r\n\r\nExample:\r\n\r\n```Perl\r\n#' # This is a title\r\n#'\r\n#' This is a comment in **markdown style**. *This text will be in italics!*.\r\n#'\r\n#' This is another paragraph. Still in markdown format.\r\n#'\r\n#' ## This is a subtitle\r\n#' \r\n#' Last paragraph.\r\n#'  \r\n\r\nprint \"Hello world in Perl!\";\r\n\r\n# This is a normal comment in Perl and will not be considered as markdown text.\r\n\r\n```\r\n\r\n\r\n## Python\r\n\r\n\r\n**Python** uses single-line and multiple-line comments.   \r\n\r\n### Single-line comments \r\n\r\nFor single-line comments, same rules mentioned for **Perl**, **Bash** and **R**.\r\n\r\n### Multiple-line comments\r\n\r\nMultiple-line comments are possible in **Python** using the `'''` pattern around text.  \r\nIn order to use markdown comments, use `'''#` and `#'''` tags around text.\r\n\r\nExample: \r\n\r\n```python\r\n'''#\r\n# Outstanding title\r\n\r\nThis is a text formatted in **markdown**.\r\nThis text embedded in special tags to indicate it will be\r\nprocessed as markdown text.\r\n\r\n\r\nFancy table:\r\n\r\n| X | Y |\r\n|:-:|--:|\r\n| 1 | 2 |\r\n| 3 | 4 |\r\n| 5 | 8 |\r\n\r\n\r\n#'''\r\n\r\nprint(\"This is a hello world in Python 3!!\")\r\n\r\n#' > Another markdown comment\r\n\r\n```\r\n\r\n## Java and Javascript\r\n\r\n**Java** and **Javascript** share the same way to make comments.\r\n\r\n### Single-line comments\r\n\r\nUse `//'` pattern.\r\n\r\nExample:\r\n\r\n```java\r\n//' This is a comment that will be processed as markdown text.\r\n//' Another comment.\r\n\r\ndocument.write(\"You can't see this!\");\r\n\r\n// This is a single line comment (not processed as markdown).\r\n```\r\n\r\n### Multiple-line comments\r\n\r\nUse `/**` and `**/` tags around text.\r\n\r\nExample:\r\n\r\n```js\r\n/**\r\n# Sum function\r\n**Overview**: Returns the sum of two numbers\r\nParameters:\r\n- a: Numeric variable\r\n- b: Numeric variable\r\n## Example\r\nresult=sum(5, 10)\r\n**/\r\n\r\n\r\nfunction sum(a, b) {\r\n    return a + b;\r\n}\r\n```\r\n> Use `/**` and `**/` tags alone in single lines! **Do not include parts of markdown text in the same line**.\r\n\r\nExample:\r\n\r\n```js\r\n/** # Sum function\r\n**Overview**: Returns the sum of two numbers\r\nParameters:\r\n- a: Numeric variable\r\n- b: Numeric variable\r\n## Example\r\nresult=sum(5, 10) **/\r\n```\r\n\r\n\r\n# Notes\r\n\r\nThis program is humbly inspired by the awesome work on *Knitr* by **Yihui Xie** and *Rmarkdown* by **JJ Allaire**.\r\n\r\n# Contributors\r\n\r\n- José Alquicira Hernández\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}